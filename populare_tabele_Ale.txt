
DROP TABLE angajati CASCADE CONSTRAINTS
/
DROP TABLE clienti CASCADE CONSTRAINTS
/
DROP TABLE facturi CASCADE CONSTRAINTS
/
DROP TABLE produse CASCADE CONSTRAINTS
/
DROP TABLE stocuri CASCADE CONSTRAINTS
/
DROP TABLE stoc_produse CASCADE CONSTRAINTS
/
DROP TABLE magazine CASCADE CONSTRAINTS
/
DROP TABLE evidente CASCADE CONSTRAINTS
/
DROP TABLE contracte CASCADE CONSTRAINTS
/
DROP TABLE cheltuieli CASCADE CONSTRAINTS
/
DROP TABLE venituri CASCADE CONSTRAINTS
/
CREATE TABLE magazine (
  id INT NOT NULL PRIMARY KEY,
  adresa VARCHAR2(100) NOT NULL,
  telefon  VARCHAR2(11) NOT NULL,
  nr_angajati INT
)
/

CREATE TABLE angajati (
  id INT NOT NULL PRIMARY KEY,
  id_magazin INT NOT NULL,
  nume VARCHAR2(15) NOT NULL,
  prenume VARCHAR2(30) NOT NULL,
  salariu NUMBER(10,2),
  functie VARCHAR2(20),
  data_angajare DATE,
 CONSTRAINT fk_angajati_id_magazin FOREIGN KEY (id_magazin) REFERENCES magazine(id)
)
/

CREATE TABLE clienti (
  id INT NOT NULL PRIMARY KEY,
  nume VARCHAR2(15) NOT NULL,
  prenume VARCHAR2(30) NOT NULL,
  data_inregistrare DATE
)
/


create table produse(
  id INT PRIMARY KEY,
  id_magazin INT NOT NULL,
  categorie  VARCHAR2(30),
  denumire  VARCHAR2(30),
  model_produs VARCHAR2(30),
  culoare VARCHAR2(30),
  pret NUMBER(10,2),
  CONSTRAINT fk_produse_id_magazin FOREIGN KEY (id_magazin) REFERENCES magazine(id)
);
/
create table stocuri(
  id INT PRIMARY KEY,
  stoc_XS INT,
  stoc_S INT,
  stoc_M INT,
  stoc_L INT,
  stoc_XL INT
);
/

create table stoc_produse(
  id INT PRIMARY KEY,
  id_produs INT NOT NULL,
  id_stoc INT NOT NULL,
  CONSTRAINT fk_stoc_produse_id_produs FOREIGN KEY (id_produs) REFERENCES produse(id),
  CONSTRAINT fk_stoc_produse_id_stoc FOREIGN KEY (id_stoc) REFERENCES stocuri(id)
);
/

drop type lista_produse force;
/
create or replace type produs as object(
  id_produs number(10),
  denumire_produs varchar2(30),
  pret_bucata number(10,2),
  cantitate number(5)
  );
/
create or replace TYPE lista_produse IS TABLE OF produs;
/

create table facturi(
  id INT PRIMARY KEY,
  id_angajat INT NOT NULL,
  id_client INT NOT NULL,
  data_factura DATE,
  valoare NUMBER(10,2),
  lista_produse lista_produse,
  CONSTRAINT fk_facturi_id_angajat FOREIGN KEY (id_angajat) REFERENCES angajati(id),
  CONSTRAINT fk_facturi_id_client FOREIGN KEY (id_client) REFERENCES clienti(id)
) nested table lista_produse store as lista;
/
CREATE TABLE evidente (
  id INT NOT NULL PRIMARY KEY,
  id_angajat INT,
  data  DATE,
  CONSTRAINT fk_evidente_id_angajat FOREIGN KEY (id_angajat) REFERENCES angajati(id)
)
/
CREATE TABLE contracte (
  id INT NOT NULL PRIMARY KEY,
  id_angajat INT,
  data_inceput  DATE,
  data_sfarsit  DATE,
  CONSTRAINT fk_contracte_id_angajat FOREIGN KEY (id_angajat) REFERENCES angajati(id)
)
/
CREATE TABLE cheltuieli (
  id INT NOT NULL PRIMARY KEY,
  id_evidenta INT,
  valoare NUMBER(10,2),
  CONSTRAINT fk_cheluieli_id_evidenta FOREIGN KEY (id_evidenta) REFERENCES evidente(id)
)
/
CREATE TABLE venituri (
  id INT NOT NULL PRIMARY KEY,
  id_evidenta INT NOT NULL,
  valoare NUMBER(10,2),
  CONSTRAINT fk_venituri_id_evidenta FOREIGN KEY (id_evidenta) REFERENCES evidente(id)
)
/



SET SERVEROUTPUT ON;
DECLARE 
  TYPE varr IS VARRAY(1000) OF varchar2(255);
  
  lista_strazi varr:= varr('Libertatii','Mihai Eminescu','Ion Creanga','Primaverii','Tudor Vladimirescu','Strapungere Silvestru','Fericirii','Zorilor','Trandafirilor','Garii','Stefan cel Mare', 'Victoriei','Pacii','Morii','Cuza Voda','Tineretului','Crinului','Gradinitei','Traian','Izvorului','Muncii','Lalelelor','Rozelor','Viitorului','Sportului','Mihail Sadoveanu','Mihail Kogalniceanu','Narciselor','Morii','Eroilor','Pacii','Decebal','Stejarului','Republicii','Victoriei','Sararie','Bulevard Carol I','Pacurari','Bulevardul Primaverii','Basarabi','Calarasi','Ciric','Ignat');
  lista_nume varr := varr('Ababei','Acasandrei','Adascalitei','Afanasie','Agafitei','Agape','Aioanei','Alexandrescu','Alexandru','Alexe','Alexii','Amarghioalei','Ambroci','Andonesei','Andrei','Andrian','Andrici','Andronic','Andros','Anghelina','Anita','Antochi','Antonie','Apetrei','Apostol','Arhip','Arhire','Arteni','Arvinte','Asaftei','Asofiei','Aungurenci','Avadanei','Avram','Babei','Baciu','Baetu','Balan','Balica','Banu','Barbieru','Barzu','Bazgan','Bejan','Bejenaru','Belcescu','Belciuganu','Benchea','Bilan','Birsanu','Bivol','Bizu','Boca','Bodnar','Boistean','Borcan','Bordeianu','Botezatu','Bradea','Braescu','Budaca','Bulai','Bulbuc-aioanei','Burlacu','Burloiu','Bursuc','Butacu','Bute','Buza','Calancea','Calinescu','Capusneanu','Caraiman','Carbune','Carp','Catana','Catiru','Catonoiu','Cazacu','Cazamir','Cebere','Cehan','Cernescu','Chelaru','Chelmu','Chelmus','Chibici','Chicos','Chilaboc','Chile','Chiriac','Chirila','Chistol','Chitic','Chmilevski','Cimpoesu','Ciobanu','Ciobotaru','Ciocoiu','Ciofu','Ciornei','Citea','Ciucanu','Clatinici','Clim','Cobuz','Coca','Cojocariu','Cojocaru','Condurache','Corciu','Corduneanu','Corfu','Corneanu','Corodescu','Coseru','Cosnita','Costan','Covatariu','Cozma','Cozmiuc','Craciunas','Crainiceanu','Creanga','Cretu','Cristea','Crucerescu','Cumpata','Curca','Cusmuliuc','Damian','Damoc','Daneliuc','Daniel','Danila','Darie','Dascalescu','Dascalu','Diaconu','Dima','Dimache','Dinu','Dobos','Dochitei','Dochitoiu','Dodan','Dogaru','Domnaru','Dorneanu','Dragan','Dragoman','Dragomir','Dragomirescu','Duceac','Dudau','Durnea','Edu','Eduard','Eusebiu','Fedeles','Ferestraoaru','Filibiu','Filimon','Filip','Florescu','Folvaiter','Frumosu','Frunza','Galatanu','Gavrilita','Gavriliuc','Gavrilovici','Gherase','Gherca','Ghergu','Gherman','Ghibirdic','Giosanu','Gitlan','Giurgila','Glodeanu','Goldan','Gorgan','Grama','Grigore','Grigoriu','Grosu','Grozavu','Gurau','Haba','Harabula','Hardon','Harpa','Herdes','Herscovici','Hociung','Hodoreanu','Hostiuc','Huma','Hutanu','Huzum','Iacob','Iacobuta','Iancu','Ichim','Iftimesei','Ilie','Insuratelu','Ionesei','Ionesi','Ionita','Iordache','Iordache-tiroiu','Iordan','Iosub','Iovu','Irimia','Ivascu','Jecu','Jitariuc','Jitca','Joldescu','Juravle','Larion','Lates','Latu','Lazar','Leleu','Leon','Leonte','Leuciuc','Leustean','Luca','Lucaci','Lucasi','Luncasu','Lungeanu','Lungu','Lupascu','Lupu','Macariu','Macoveschi','Maftei','Maganu','Mangalagiu','Manolache','Manole','Marcu','Marinov','Martinas','Marton','Mataca','Matcovici','Matei','Maties','Matrana','Maxim','Mazareanu','Mazilu','Mazur','Melniciuc-puica','Micu','Mihaela','Mihai','Mihaila','Mihailescu','Mihalachi','Mihalcea','Mihociu','Milut','Minea','Minghel','Minuti','Miron','Mitan','Moisa','Moniry-abyaneh','Morarescu','Morosanu','Moscu','Motrescu','Motroi','Munteanu','Murarasu','Musca','Mutescu','Nastaca','Nechita','Neghina','Negrus','Negruser','Negrutu','Nemtoc','Netedu','Nica','Nicu','Oana','Olanuta','Olarasu','Olariu','Olaru','Onu','Opariuc','Oprea','Ostafe','Otrocol','Palihovici','Pantiru','Pantiruc','Paparuz','Pascaru','Patachi','Patras','Patriche','Perciun','Perju','Petcu','Pila','Pintilie','Piriu','Platon','Plugariu','Podaru','Poenariu','Pojar','Popa','Popescu','Popovici','Poputoaia','Postolache','Predoaia','Prisecaru','Procop','Prodan','Puiu','Purice','Rachieru','Razvan','Reut','Riscanu','Riza','Robu','Roman','Romanescu','Romaniuc','Rosca','Rusu','Samson','Sandu','Sandulache','Sava','Savescu','Schifirnet','Scortanu','Scurtu','Sfarghiu','Silitra','Simiganoschi','Simion','Simionescu','Simionesei','Simon','Sitaru','Sleghel','Sofian','Soficu','Sparhat','Spiridon','Stan','Stavarache','Stefan','Stefanita','Stingaciu','Stiufliuc','Stoian','Stoica','Stoleru','Stolniceanu','Stolnicu','Strainu','Strimtu','Suhani','Tabusca','Talif','Tanasa','Teclici','Teodorescu','Tesu','Tifrea','Timofte','Tincu','Tirpescu','Toader','Tofan','Toma','Toncu','Trifan','Tudosa','Tudose','Tuduri','Tuiu','Turcu','Ulinici','Unghianu','Ungureanu','Ursache','Ursachi','Urse','Ursu','Varlan','Varteniuc','Varvaroi','Vasilache','Vasiliu','Ventaniuc','Vicol','Vidru','Vinatoru','Vlad','Voaides','Vrabie','Vulpescu','Zamosteanu','Zazuleac');
  lista_prenume varr := varr( 'Adina','Alexandra','Alina','Ana','Anca','Anda','Andra','Andreea','Andreia','Antonia','Bianca','Camelia','Claudia','Codrina','Cristina','Daniela','Daria','Delia','Denisa','Diana','Ecaterina','Elena','Eleonora','Elisa','Ema','Emanuela','Emma','Gabriela','Georgiana','Ileana','Ilona','Ioana','Iolanda','Irina','Iulia','Iuliana','Larisa','Laura','Loredana','Madalina','Malina','Manuela','Maria','Mihaela','Mirela','Monica','Oana','Paula','Petruta','Raluca','Sabina','Sanziana','Simina','Simona','Stefana','Stefania','Tamara','Teodora','Theodora','Vasilica','Xena', 'Adrian','Alex','Alexandru','Alin','Andreas','Andrei','Aurelian','Beniamin','Bogdan','Camil','Catalin','Cezar','Ciprian','Claudiu','Codrin','Constantin','Corneliu','Cosmin','Costel','Cristian','Damian','Dan','Daniel','Danut','Darius','Denise','Dimitrie','Dorian','Dorin','Dragos','Dumitru','Eduard','Elvis','Emil','Ervin','Eugen','Eusebiu','Fabian','Filip','Florian','Florin','Gabriel','George','Gheorghe','Giani','Giulio','Iaroslav','Ilie','Ioan','Ion','Ionel','Ionut','Iosif','Irinel','Iulian','Iustin','Laurentiu','Liviu','Lucian','Marian','Marius','Matei','Mihai','Mihail','Nicolae','Nicu','Nicusor','Octavian','Ovidiu','Paul','Petru','Petrut','Radu','Rares','Razvan','Richard','Robert','Roland','Rolland','Romanescu','Sabin','Samuel','Sebastian','Sergiu','Silviu','Stefan','Teodor','Teofil','Theodor','Tudor','Vadim','Valentin','Valeriu','Vasile','Victor','Vlad','Vladimir','Vladut');
  lista_functii varr := varr('Manager','Contabil', 'Vanzator', 'Agent-paza', 'Casier', 'Sef-raion', 'Sef-magazin','Asistent-sef-magazin','Sef-depozit','Asistent-sef-depozit','Sef-tura', 'Asistent-vanzari','Gestionar-magazin' );
  
  v_iterator number;
  
  v_nume VARCHAR2(30);
  v_prenume varchar2(30);
  v_functie varchar2(40);
  
  v_my_number_prenume number;
  v_my_number_nume number;
  v_my_number_functie number;
  
  v_verific_id_pers number;
  v_id_pers number := 1;
  v_id_clienti number := 1;
  
  v_data_angajare date;  
  v_data_inregistrare date;
  v_data_factura date;
  
  v_salariu number;
  
  v_nr_angajati INT;
  v_nr_angajati2 INT;
  v_id_magazin INT;
  
  v_adresa VARCHAR2(100);
  v_strada VARCHAR2(60);
  v_numar_strada INT;
  
  v_telefon VARCHAR2(11);
  
  v_facturi_client INT;
  v_facturi_angajat_temporar INT;
  v_facturi_angajat INT;
  v_valoare_factura int;
  v_functie2 varchar2(20);
  


 
begin
  --MAGAZINE
  FOR v_i in 1..100 LOOP
     v_strada:=lista_strazi(TRUNC(DBMS_RANDOM.VALUE(0,lista_strazi.count))+1);
     v_numar_strada:=ROUND(DBMS_RANDOM.VALUE(1,1000))+1;
     v_adresa:='Str. '||v_strada||' nr. '||v_numar_strada;
     v_telefon:='07'||ROUND(DBMS_RANDOM.VALUE(100,999))||ROUND(DBMS_RANDOM.VALUE(100,999))||ROUND(DBMS_RANDOM.VALUE(10,99));
     v_nr_angajati:=ROUND(DBMS_RANDOM.VALUE(1000,3000));
     INSERT INTO magazine VALUES(v_i,v_adresa,v_telefon,v_nr_angajati);
  END LOOP;

  --ANGAJATI
  for v_iterator_magazine in 1..100 loop
      select v_nr_angajati, id into v_nr_angajati2, v_id_magazin from magazine where id=v_iterator_magazine;
      for v_iterator in 1..v_nr_angajati2  loop   
        --nume
         v_my_number_nume := TRUNC(DBMS_RANDOM.VALUE( 1, lista_nume.count));
         v_nume := lista_nume(v_my_number_nume);
         
         --prenume
         v_my_number_prenume := TRUNC(DBMS_RANDOM.VALUE( 1, lista_prenume.count));
         v_prenume := lista_prenume(v_my_number_prenume);
         
         --id
         select count(*) into v_verific_id_pers from (select * from angajati WHERE id = v_id_pers);
         while (v_verific_id_pers > 0) loop
              v_id_pers := v_id_pers + 1; 
              select count(*) into v_verific_id_pers from (select * from angajati WHERE id = v_id_pers);
         end loop;
         v_id_pers := v_id_pers + 1; 
         
         --functie
         v_my_number_functie := TRUNC(DBMS_RANDOM.VALUE( 1, lista_functii.count));
         v_functie := lista_functii(v_my_number_functie);
         
         --salariu
         if(v_functie = 'Manager' or v_functie = 'Contabil') then
            v_salariu := FLOOR(DBMS_RANDOM.VALUE(50,99)) || FLOOR(DBMS_RANDOM.VALUE(0,9)) || FLOOR(DBMS_RANDOM.VALUE(0,9)) ;
         else
            v_salariu := FLOOR(DBMS_RANDOM.VALUE(10,49)) || FLOOR(DBMS_RANDOM.VALUE(0,9)) || FLOOR(DBMS_RANDOM.VALUE(0,9)) ;
         end if;
         
         --data_angajare
         v_data_angajare := (sysdate-TRUNC(DBMS_RANDOM.VALUE(0,1000)));
         
         insert into angajati (id, id_magazin, nume, prenume,salariu, functie,data_angajare) values ( v_id_pers, v_id_magazin, v_nume, v_prenume,v_salariu, v_functie, v_data_angajare);
         
      end loop;
  end loop;
  
  --CLIENTI
   for v_iterator in 1..300000 loop
      --nume
       v_my_number_nume := TRUNC(DBMS_RANDOM.VALUE( 1, lista_nume.count));
       v_nume := lista_nume(v_my_number_nume);
       
       --prenume
       v_my_number_prenume := TRUNC(DBMS_RANDOM.VALUE( 1, lista_prenume.count));
       v_prenume := lista_prenume(v_my_number_prenume);
       
       --id
       select count(*) into v_verific_id_pers from (select * from clienti WHERE id = v_id_clienti);
       while (v_verific_id_pers > 0) loop
            v_id_clienti := v_id_clienti + 1; 
            select count(*) into v_verific_id_pers from (select * from clienti WHERE id = v_id_clienti);
       end loop;
       v_id_clienti := v_id_clienti + 1; 
       
       --data_inregistrare
       v_data_inregistrare := (sysdate-TRUNC(DBMS_RANDOM.VALUE(0,500)));
       
       
       insert into clienti (id, nume, prenume, data_inregistrare) values ( v_id_clienti, v_nume, v_prenume, v_data_inregistrare);    
   end loop;
  
  
  

end;